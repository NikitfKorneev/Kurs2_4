import discord
from config import settings
from discord.ui import Button, View
from discord.ext import commands
import json

role_name = 'üïë –ì–æ—Å—Ç—å'

def get_server_prefix(client, message):
    with open("prefix.json","r") as f:
        prefix = json.load(f)
    
    return prefix[str(message.guild.id)]

intents = discord.Intents.all()
intents.message_content = True
bot = commands.Bot(command_prefix= get_server_prefix, intents=intents)

@bot.event
async def on_member_join(member):
    role = discord.utils.get(member.guild.roles, name= role_name)
    await member.add_roles(role)

@bot.event
async def on_guild_join(guild):
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix[str(guild.id)] = "!"

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)

"<------------[–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ—Ñ–∏–∫—Å–µ –≤ json —Ñ–∞–π–ª–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞]------------>"

@bot.event
async def on_guild_remove(guild):
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix.pop(str(guild.id))

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)

"<------------[–í—ã–≤–æ–¥ –ø—Ä–µ—Ñ–∏–∫—Å–∞]------------>"

@bot.slash_command(id_server = [settings['id_server']])
async def prefix(ctx: discord.ApplicationContext):
    with open('prefix.json') as file:
        data = json.load(file)
        if settings['id_server'] in data:
            templates = data[settings['id_server']]
        else:
            templates = "–ö–ª—é—á —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    await ctx.respond(f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä–≤–µ—Ä–∞ - {templates}")

"<------------[–°–º–µ–Ω–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞]------------>"

@bot.slash_command(id_server = [settings['id_server']])
async def setprefix(ctx: discord.ApplicationContext,*,newprefix:str):
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix[str(ctx.guild.id)] = newprefix

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)
    await ctx.response.send_message(f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–º–µ–Ω–µ–Ω –Ω–∞ {newprefix}", ephemeral=True) 

def get_prefix():
    with open('prefix.json') as file:
        data = json.load(file)
        if settings['id_server'] in data:
            templates = data[settings['id_server']]
        else:
            templates = "–ö–ª—é—á —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return templates

"<------------[–ö–Ω–æ–ø–∫–∞]------------>"

class MyView(View):
    def __init__(self):
        super().__init__()
        self.add_item(Button(label="–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã", url="https://miro.com/app/board/uXjVMHAPgZY=/"))

class Accept(View):
    def __init__(self):
        super().__init__()
        self.add_item(Button(label="–ü–æ—Ç–≤–µ—Ä–∂–¥–∞—é —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏"))
        

@bot.slash_command(name="roles")
async def roles(ctx: discord.ApplicationContext):
    view = MyView()
    await ctx.send(view=view)
    
"<------------[++++++++++++++]------------>"

@bot.slash_command(id_server=[settings['id_server']])
async def welcome(ctx: discord.ApplicationContext):
    emb = discord.Embed(title='–ü—Ä–∞–≤–∏–ª–∞')
    emb.add_field(name=':one: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞', inline=False)
    emb.add_field(name=':two: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–≤—É–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏', inline=False)
    emb.add_field(name=':three: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –æ—Ç –æ–±—Ä–∞–∑—Ü–∞', inline=False)
    role_button = RoleButton(role_id=1108739184962830408)
    await ctx.send(view=role_button)
    await ctx.response.send_message(embed=emb)

class RoleButton(View):
    def __init__(self, role_id):
        super().__init__()
        self.role_id = role_id
        self.role_id_old = "1108739091211767808"

    @discord.ui.button(label='–Ø –ø—Ä–∏–Ω–∏–º–∞—é –ø—Ä–∞–≤–∏–ª–∞', style=discord.ButtonStyle.primary)
    async def get_role(self, button: discord.ui.Button, interaction: discord.Interaction):
        member = interaction.user
        role = interaction.guild.get_role(self.role_id)
        old_role = interaction.guild.get_role(self.role_id_old)
        await member.add_roles(role)
        await member.remove_roles(old_role)
        await interaction.response.send_message(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å {role.name}", ephemeral=True)

@bot.command()
async def setup_role_button(ctx):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID —Ä–æ–ª–∏
    role_button = RoleButton(role_id=1108739184962830408)
    await ctx.send('Click the button to get the role:', view=role_button)

def has_adm_role():
    def predicate(ctx):
        adm_role = discord.utils.get(ctx.guild.roles, name="üìå–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        return adm_role in ctx.author.roles
    return commands.check(predicate)

@bot.slash_command(id_server = [settings['id_server']])
@has_adm_role()
async def userinfo(ctx: discord.ApplicationContext, user: discord.User):
    user_id = user.id
    username = user.name
    avatar = user.display_avatar.url
    await ctx.response.send_message(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_id} -- {username}\n{avatar}', ephemeral=True)

@userinfo.error
async def roll_error(ctx):
    await ctx.send('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ "üìå–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command() 
async def members(ctx): 
    for guild in bot.guilds:
        for member in guild.members:
            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {member}")

@bot.slash_command(id_server=[settings['id_server']])
async def info_command(ctx: discord.ApplicationContext):
    emb = discord.Embed(title='–í—Å–µ –∫–æ–º–∞–Ω–¥—ã')
    emb.add_field(name='–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | –ù–∞–∑–≤–∞–Ω–∏–µ ', value='–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª', inline=False)
    emb.add_field(name='3 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | members', value='–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', inline=False)
    emb.add_field(name='2 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | userinfo', value='–í—ã–≤–æ–¥ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ', inline=False)
    emb.add_field(name='–û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | welcome', value='–í—ã–≤–æ–¥ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞', inline=False)
    emb.add_field(name='1 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | roles', value='–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ—Å–∫—É –º–∏—Ä–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ä–æ–ª–µ–≤–æ–π –º–æ–¥–µ–ª–∏', inline=False)
    emb.add_field(name='2 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | setprefix', value='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ', inline=False)
    await ctx.response.send_message(embed=emb, ephemeral=True)    

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω {bot.user}')

bot.run(settings['token'])