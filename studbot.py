import discord
from config import settings
from discord.ui import Button, View
from discord.ext import commands
from googletrans import Translator
from pytils import translit
import platform
from datetime import datetime, timedelta
from googleapiclient.discovery import build
import asyncio
import json
import openai

CHANNEL_ID = '1108748083950534738'
INACTIVITY_PERIOD = 2
API_KEY = 'AIzaSyAAb1RW01ySR6Rojt4Sw'
OPENAI_API_KEY = 'sk-dSCtjWHUAyOkOsZe7m1zT3BlbkFJIy8X0r5H3'
ticket_category_name = "–¢–∏–∫–µ—Ç—ã"
role_name = 'üïë –ì–æ—Å—Ç—å'

translator = Translator()

def get_server_prefix(client, message):
    with open("prefix.json","r") as f:
        prefix = json.load(f)
    
    return prefix[str(message.guild.id)]

intents = discord.Intents.all()
intents.message_content = True
intents.voice_states = True
intents.guild_messages = True
bot = commands.Bot(command_prefix= get_server_prefix, intents=intents)

@bot.command()
async def autorole(ctx, *, role_name_input):
    global role_name

    role = discord.utils.get(ctx.guild.roles, name=role_name_input)
    if role is None:
        await ctx.send(f"–†–æ–ª—å '{role_name_input}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return

    role_name = role_name_input
    await ctx.send(f"–ê–≤—Ç–æ —Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ '{role_name}'.")

@bot.event
async def on_member_join(member):
    global role_name
    role = discord.utils.get(member.guild.roles, name=role_name)
    if role is not None:
        await member.add_roles(role)

@bot.event
async def on_guild_join(guild):
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ json —Ñ–∞–π–ª–∞ –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"""
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix[str(guild.id)] = "!"

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)

@bot.event
async def on_guild_remove(guild):
    """–û—á–∏—Å—Ç–∫–∞ json —Ñ–∞–π–ª–∞, –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–∫—É–¥–∞ –≤—ã—à–µ–ª –±–æ—Ç"""
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix.pop(str(guild.id))

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)

@bot.command()
async def transl(ctx, *,text):
    translit_dict = {
        'q': '–π',
        'w': '—Ü',
        'e': '—É',
        'r': '–∫',
        't': '–µ',
        'y': '–Ω',
        'u': '–≥',
        'i': '—à',
        'o': '—â',
        'p': '–∑',
        'a': '—Ñ',
        's': '—ã',
        'd': '–≤',
        'f': '–∞',
        'g': '–ø',
        'h': '—Ä',
        'j': '–æ',
        'k': '–ª',
        'l': '–¥',
        'z': '—è',
        'x': '—á',
        'c': '—Å',
        'v': '–º',
        'b': '–∏',
        'n': '—Ç',
        'm': '—å',
        ' ': ' ',
        '-': '-',
        '`': '—ë'
    }
    
    result = ''
    for char in text:
        if char.lower() in translit_dict:
            result += translit_dict[char.lower()]
        else:
            result += char

    await ctx.send(result)

@bot.command()
async def youtube_search(ctx, *, query):
    try:
        # –°–æ–∑–¥–∞–µ–º YouTube Data API –∫–ª–∏–µ–Ω—Ç
        youtube = build('youtube', 'v3', developerKey=API_KEY)
        
        # –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
        search_response = youtube.search().list(
            q=query,
            part='id',
            maxResults=5
        ).execute()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
        video_links = []
        for item in search_response['items']:
            if item['id']['kind'] == 'youtube#video':
                video_links.append(f"https://www.youtube.com/watch?v={item['id']['videoId']}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if video_links:
            user = ctx.author
            for link in video_links:
                await user.send(link)
            await ctx.send(f'–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}" –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.')
        else:
            await ctx.send(f'–ü–æ –∑–∞–ø—Ä–æ—Å—É "{query}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ –Ω–∞ YouTube.')
    except Exception as e:
        await ctx.send(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞: {str(e)}')

@bot.command()
async def prole(ctx, role_name):
    guild = ctx.guild
    role = discord.utils.get(guild.roles, name=role_name)
    
    if role is None:
        await ctx.send(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    
    online_users = [member for member in guild.members if role in member.roles and str(member.status) == 'online']
    
    message = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é '{role_name}', –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Å–µ—Ç–∏:\n\n"
    for user in online_users:
        message += f"<@{user.id}>\n"
    
    await ctx.author.send(message)
    await ctx.send("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

@bot.command()
async def timer(ctx, seconds):
    try:
        seconds = int(seconds)
    except ValueError:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.")
        return

    await ctx.send(f"–¢–∞–π–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {seconds} —Å–µ–∫—É–Ω–¥.")

    # –û–∂–∏–¥–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥
    await asyncio.sleep(seconds)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await ctx.author.send(f"–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ –ø–æ—Å–ª–µ {seconds} —Å–µ–∫—É–Ω–¥!")



@bot.command()
async def poll(ctx, question, *options):
    # –°–æ–∑–¥–∞–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    embed = discord.Embed(title="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", description=question, color=discord.Color.blue())
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    options_text = "\n".join([f"{i + 1}. {option}" for i, option in enumerate(options)])
    embed.add_field(name="–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤", value=options_text, inline=False)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = await ctx.send(embed=embed)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    for i, _ in enumerate(options):
        emoji = get_emoji(i)
        await message.add_reaction(emoji)
    
    # –û–∂–∏–¥–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    def check(reaction, user):
        return user == ctx.author and reaction.message.id == message.id
    
    try:
        reaction, user = await bot.wait_for("reaction_add", check=check, timeout=60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
        selected_option = get_option(reaction.emoji, options)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç", value=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç: {selected_option}")
        await message.edit(embed=embed)
    except TimeoutError:
        await message.edit(content="–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –ø–æ —Ç–∞–π–º–∞—É—Ç—É.")
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await ctx.message.delete()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —ç–º–æ–¥–∑–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É
def get_emoji(index):
    emojis = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
    return emojis[index]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ —ç–º–æ–¥–∑–∏
def get_option(emoji, options):
    emojis = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]
    index = emojis.index(emoji)
    return options[index]

@bot.command()
async def add_role(ctx, member: discord.Member, role: discord.Role, duration: int):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å —Ä–æ–ª–∏
    if not ctx.author.guild_permissions.manage_roles:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –±–æ—Ç –ø—Ä–∞–≤–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å —Ä–æ–ª–∏
    if not ctx.guild.me.guild_permissions.manage_roles:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π.")
        return
    
    # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await member.add_roles(role)
    await ctx.send(f"–†–æ–ª—å `{role.name}` –±—ã–ª–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥.")
    
    # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    await asyncio.sleep(duration)
    
    # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await member.remove_roles(role)
    await ctx.send(f"–†–æ–ª—å `{role.name}` –±—ã–ª–∞ —Å–Ω—è—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}.")

openai.api_key = OPENAI_API_KEY

@bot.command()
async def send_openai(ctx, *, message):
    # –†–∞–∑–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é ';'
    items = message.split(';')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –ø–æ–º–æ—â—å—é Markdown
    formatted_list = '\n'.join([f'{index}. {item.strip()}' for index, item in enumerate(items, start=1)])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Chat API v3
    response = openai.Completion.create(
        engine='text-davinci-003',
        prompt=formatted_list,
        max_tokens=4000,
        n=1,
        stop=None,
        temperature=0.7 
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Chat API
    reply = response.choices[0].text.strip()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫–∞–Ω–∞–ª Discord
    await ctx.send(f"–û—Ç–≤–µ—Ç –æ—Ç Chat API: {reply}")

@bot.command()
async def system_info(ctx):
    # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    system_name = platform.system()
    processor = platform.processor()
    motherboard = platform.node()
    gpu = "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    try:
        import GPUtil
        gpus = GPUtil.getGPUs()
        if gpus:
            gpu = gpus[0].name
    except ImportError:
        pass
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    message = f"–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n\n"
    message += f"–û–°: {system_name}\n"
    message += f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {processor}\n"
    message += f"–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞: {motherboard}\n"
    message += f"–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: {gpu}\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª Discord
    await ctx.message.delete()
    await ctx.send(message)
"<------------[–í—ã–≤–æ–¥ –ø—Ä–µ—Ñ–∏–∫—Å–∞]------------>"

@bot.slash_command(id_server = [settings['id_server']])
async def prefix(ctx: discord.ApplicationContext)-> str:
    """–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ—Ñ–∏–∫—Å–µ –¥–ª—è –∫–æ–º–∞–Ω–¥ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"""
    with open('prefix.json') as file:
        data = json.load(file)
        if settings['id_server'] in data:
            templates = data[settings['id_server']]
        else:
            templates = "–ö–ª—é—á —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    await ctx.respond(f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä–≤–µ—Ä–∞ - {templates}")

"<------------[–í—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–æ–π—Å –∫–∞–Ω–∞–ª—ã]------------>"
@bot.event
async def on_voice_state_update(member, before, after):
    if after.channel is not None and after.channel != before.channel:
        if "time" in after.channel.name.lower():
            await creates_temporary_channel(after.channel, member)

    if before.channel is not None and before.channel != after.channel:
        if len(before.channel.members) == 0:
            await delete_temporary_channel(before.channel)

async def creates_temporary_channel(channel, member):
    category = channel.category 
    if "time" in channel.name.lower():
        new_channel = await channel.clone() 
        await new_channel.edit(name=f"Temp")  
        await new_channel.edit(category=None)  
        await new_channel.set_permissions(channel.guild.default_role, connect=True)  
        await new_channel.set_permissions(new_channel.guild.me, connect=True)  
        await member.move_to(new_channel)

async def delete_temporary_channel(channel):
    if "temp" in channel.name.lower():
        await channel.delete()


"<------------[C–∏—Å—Ç–µ–º–∞ —Ç–∏–∫–µ—Ç–æ–≤]------------>"
@bot.command()
async def ticket(ctx):
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
    ticket_channel = await create_temporary_channel(ctx.author)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    await ctx.send(f"–°–æ–∑–¥–∞–Ω —Ç–∏–∫–µ—Ç: {ticket_channel.mention}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
    await send_close_ticket_message(ticket_channel)

async def create_temporary_channel(author):
    guild = author.guild
    category = discord.utils.get(guild.categories, name=ticket_category_name)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤. –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.
    if category is None:
        category = await guild.create_category(name=ticket_category_name)

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
    ticket_channel = await category.create_text_channel(name=f"ticket-{author.name}",
                                                       overwrites=await get_channel_overwrites(guild, author))

    return ticket_channel

async def get_channel_overwrites(guild, author):
    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        guild.me: discord.PermissionOverwrite(read_messages=True),
        author: discord.PermissionOverwrite(read_messages=True)
    }
    return overwrites

async def send_close_ticket_message(channel):
    # –°–æ–∑–¥–∞–µ–º View –¥–ª—è –∫–Ω–æ–ø–∫–∏
    class CloseTicketView(View):
        def __init__(self):
            super().__init__()
            self.timeout = None

        @discord.ui.button(label='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=discord.ButtonStyle.danger, emoji='üîí')
        async def close_ticket(self, button: discord.ui.Button, interaction: discord.Interaction):
            await channel.delete()

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞
    embed = discord.Embed(title='–¢–∏–∫–µ—Ç', description='–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.')
    view = CloseTicketView()
    message = await channel.send(embed=embed, view=view)

    return message

"<------------[–°–º–µ–Ω–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞]------------>"

@bot.slash_command(id_server = [settings['id_server']])
async def setprefix(ctx: discord.ApplicationContext,*,newprefix:str):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    with open("prefix.json","r") as f:
        prefix = json.load(f)

    prefix[str(ctx.guild.id)] = newprefix

    with open("prefix.json","w") as f:
        json.dump(prefix,f,indent=4)
    await ctx.response.send_message(f"–ü—Ä–µ—Ñ–∏–∫—Å —Å–º–µ–Ω–µ–Ω –Ω–∞ {newprefix}", ephemeral=True) 

def get_prefix():
    """–ß—Ç–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∏—Ö —Ñ–∞–π–ª–∞"""
    with open('prefix.json') as file:
        data = json.load(file)
        if settings['id_server'] in data:
            templates = data[settings['id_server']]
        else:
            templates = "–ö–ª—é—á —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return templates

"<------------[–ö–Ω–æ–ø–∫–∞]------------>"

class MyView(View):
    def __init__(self):
        """–°–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Ä–æ–ª–µ–≤—É—é —Å–∏—Å—Ç–µ–º—É"""
        super().__init__()
        self.add_item(Button(label="–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã", url="https://miro.com/app/board/uXjVMHAPgZY=/"))

class Accept(View):
    def __init__(self):
        super().__init__()
        self.add_item(Button(label="–ü–æ—Ç–≤–µ—Ä–∂–¥–∞—é —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏"))
        

@bot.slash_command(name="roles")
async def roles(ctx: discord.ApplicationContext):
    """–í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–æ–ª–µ–≤—É—é –º–æ–¥–µ–ª—å –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã"""
    view = MyView()
    await ctx.send(view=view)
    
"<------------[++++++++++++++]------------>"

@bot.slash_command(id_server=[settings['id_server']])
async def welcome(ctx: discord.ApplicationContext):
    """–í—ã–≤–æ–¥ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞"""
    emb = discord.Embed(title='–ü—Ä–∞–≤–∏–ª–∞')
    emb.add_field(name=':one: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞', inline=False)
    emb.add_field(name=':two: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–≤—É–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏', inline=False)
    emb.add_field(name=':three: –ó–∞–ø—Ä–µ—â–µ–Ω–æ', value='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –æ—Ç –æ–±—Ä–∞–∑—Ü–∞', inline=False)
    role_button = RoleButton(role_id=1108739184962830408)
    await ctx.send(view=role_button)
    await ctx.response.send_message(embed=emb)

class RoleButton(View):
    def __init__(self, role_id):
        super().__init__()
        self.role_id = role_id
        self.role_id_old = "1108739091211767808"

    @discord.ui.button(label='–Ø –ø—Ä–∏–Ω–∏–º–∞—é –ø—Ä–∞–≤–∏–ª–∞', style=discord.ButtonStyle.primary)
    async def get_role(self, button: discord.ui.Button, interaction: discord.Interaction):
        member = interaction.user
        role = interaction.guild.get_role(self.role_id)
        old_role = interaction.guild.get_role(self.role_id_old)
        await member.add_roles(role)
        await member.remove_roles(old_role)
        await interaction.response.send_message(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Ä–æ–ª—å {role.name}", ephemeral=True)

@bot.command()
async def start(ctx, role: discord.Role):
    allowed_roles = [1108741366541979759,1108741692485546054,1108741762547187814,1108741847678980216,1108741923398746206,1108742278660505630]
    role_id_check = role.id
    if role_id_check not in allowed_roles:
       await ctx.send(f"–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ç—ç–≥–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å!")
       await ctx.message.delete()
       return
    await ctx.message.delete()
    await ctx.send(f"<@&{role_id_check}> –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ø–∞—Ä–µ!")

@bot.command()
async def role_id(ctx, role: discord.Role):
    role_id = role.id
    await ctx.send(f"ID —Ä–æ–ª–∏ '{role.name}': {role_id}")

@bot.command()
async def setup_role_button(ctx):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID —Ä–æ–ª–∏
    role_button = RoleButton(role_id=1108739184962830408)
    await ctx.send('Click the button to get the role:', view=role_button)

def has_adm_role():
    def predicate(ctx):
        """–ó–∞–¥–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—Ü–µ–Ω–∏—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ä–æ–ª–∏"""
        adm_role = discord.utils.get(ctx.guild.roles, name="üìå–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        return adm_role in ctx.author.roles
    return commands.check(predicate)

@bot.slash_command(id_server = [settings['id_server']])
@has_adm_role()
async def userinfo(ctx: discord.ApplicationContext, user: discord.User):
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    user_id = user.id
    username = user.name
    avatar = user.display_avatar.url
    await ctx.response.send_message(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_id} -- {username}\n{avatar}', ephemeral=True)

@userinfo.error
async def roll_error(ctx):
    """–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    await ctx.send('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ "üìå–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.command() 
async def members(ctx):
    """–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    for guild in bot.guilds:
        for member in guild.members:
            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {member}")

@bot.slash_command(id_server=[settings['id_server']])
async def info_command(ctx: discord.ApplicationContext):
    """–í—ã–≤–æ–¥ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö —É—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞"""
    emb = discord.Embed(title='–í—Å–µ –∫–æ–º–∞–Ω–¥—ã')
    emb.add_field(name='–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | –ù–∞–∑–≤–∞–Ω–∏–µ ', value='–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª', inline=False)
    emb.add_field(name='3 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | members', value='–í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', inline=False)
    emb.add_field(name='2 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | userinfo', value='–í—ã–≤–æ–¥ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ', inline=False)
    emb.add_field(name='–û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | welcome', value='–í—ã–≤–æ–¥ –ø—Ä–∞–≤–∏–ª —Å–µ—Ä–≤–µ—Ä–∞', inline=False)
    emb.add_field(name='1 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | roles', value='–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ—Å–∫—É –º–∏—Ä–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ä–æ–ª–µ–≤–æ–π –º–æ–¥–µ–ª–∏', inline=False)
    emb.add_field(name='2 —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ | setprefix', value='–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ', inline=False)
    await ctx.response.send_message(embed=emb, ephemeral=True) 

word_responses = {
    '–±–ª—è': '–ù–µ –º–∞—Ç–µ—Ä–∏—Å—å!'
}

@bot.event
async def on_message(message):
    if not message.author.bot:
        content = message.content.lower()

        for word, response in word_responses.items():
            if word in content:
                await message.delete()
                await message.channel.send(response)
                break  

    await bot.process_commands(message) 

@bot.event
async def on_ready():
    """–í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–æ—Ç–∞"""
    print(f'–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω {bot.user}')

bot.run(settings['token'])
